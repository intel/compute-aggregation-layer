# Copyright (C) 2022 Intel Corporation
#
# SPDX-License-Identifier: MIT

config:
  api_name: ocl
  loader_lib_names: ["libOpenCL.so", "libOpenCL.so.1"]
  icd_namespace: "Cal::Icd::Ocl"
  rpc_namespace: "Cal::Rpc::Ocl"
  daemon_namespace: "Cal::Service::Apis::Ocl"
  icd_dispatch_table_type:
    "core": "cl_icd_dispatch"

  icd_init_dispatch_table_func_name_format: "initOclIcdDispatchTable"
  icd_get_extenion_func_addr_func_name: getOclExtensionFuncionAddressRpcHelper
  icd_acquire_global_object: "auto *globalPlatform = Cal::Icd::icdGlobalState.getOclPlatform()"
  icd_acquire_channel: "globalPlatform->getRpcChannel()"
  result_type: cl_int
  result_success: CL_SUCCESS
  file_headers:
    common: []
    rpc_messages_h:
      - "#ifdef SLIM_OCL"
      - '#   include "ocl_slim_def.h"'
      - "#else "
      - '#   include "shared/ocl_fat_def.h"'
      - "#endif"
    rpc_messages_cpp:
      - '#include "icd/icd_ocl.h"'
    icd_h:
      - '#include "icd/icd_ocl.h"'
    icd_cpp:
      - '#include "icd/icd_page_fault_manager.h"'
    api:
      - "#define CL_TARGET_OPENCL_VERSION 300"
      - "#include <CL/cl.h>"
      - "#include <CL/cl_ext.h>"

  unimplemented:
    - name: "core"
      members: [
          clSetCommandQueueProperty, # Deprecated 1.0
          # GL-sharing, intentionally left unsupported in aggregation layer:
          clCreateFromGLBuffer,
          clCreateFromGLTexture2D,
          clCreateFromGLTexture3D,
          clCreateFromGLRenderbuffer,
          clGetGLObjectInfo,
          clGetGLTextureInfo,
          clEnqueueAcquireGLObjects,
          clEnqueueReleaseGLObjects,
          clGetGLContextInfoKHR,
          clCreateEventFromGLsyncKHR,
          clCreateFromGLTexture,
          clCreateFromEGLImageKHR,
          clEnqueueAcquireEGLObjectsKHR,
          clEnqueueReleaseEGLObjectsKHR,
          clCreateEventFromEGLSyncKHR,
          # D3D/DX-sharing, intentionally left unsupported in aggregation layer:
          clGetDeviceIDsFromD3D10KHR,
          clCreateFromD3D10BufferKHR,
          clCreateFromD3D10Texture2DKHR,
          clCreateFromD3D10Texture3DKHR,
          clEnqueueAcquireD3D10ObjectsKHR,
          clEnqueueReleaseD3D10ObjectsKHR,
          clGetDeviceIDsFromD3D11KHR,
          clCreateFromD3D11BufferKHR,
          clCreateFromD3D11Texture2DKHR,
          clCreateFromD3D11Texture3DKHR,
          clCreateFromDX9MediaSurfaceKHR,
          clEnqueueAcquireD3D11ObjectsKHR,
          clEnqueueReleaseD3D11ObjectsKHR,
          clGetDeviceIDsFromDX9MediaAdapterKHR,
          clEnqueueAcquireDX9MediaSurfacesKHR,
          clEnqueueReleaseDX9MediaSurfacesKHR,
          # WIP :
          clEnqueueMapImage,
          # Callbacks, intentionally left for later
          clEnqueueSVMFree,
          clEnqueueNativeKernel,
          clSetContextDestructorCallback,
          clSetMemObjectDestructorCallback,
        ]

  functions:
    - name: "core"
      members:
        - name: clGetPlatformIDs
          latency: 1.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper" # Dedicated handling as CAL platform name
            rpc:
              dont_generate_rpc_handler: True
          cacheable:
            on_server: True
            on_client: True
            based_on:
              - 0: value
                1: not_null
                2: not_null
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: num_entries
              type: cl_uint
              kind: scalar
            1:
              name: platforms
              type: "cl_platform_id*"
              kind: ptr_array
              kind_details:
                num_elements: "num_entries"
                can_be_null: True
                element:
                  type: cl_platform_id
                  kind: scalar
                server_access: write
            2:
              name: num_platforms
              type: "cl_uint*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_uint
                  kind: scalar
                server_access: write
        - name: clIcdGetPlatformIDsKHR
          special_handling:
            icd:
              alias_to: clGetPlatformIDs
              not_in_dispatch_table: True
            rpc:
              dont_generate_rpc_message: True
        - name: clGetPlatformInfo
          latency: 0.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper" # Dedicated handling for get platform name
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: platform
              type: cl_platform_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclPlatform*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_platform_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetExtensionFunctionAddress
          latency: 0.0
          special_handling:
            icd:
              dont_generate_handler: True
            rpc:
              dont_generate_rpc_message: True
          returns:
            type: void*
            kind: ptr_va
            kind_details:
              can_be_null: True
              element:
                type: void
                kind: opaque
          args:
            0:
              name: funcname
              type: "const char*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated"
                can_be_null: True
                element:
                  type: "char"
                  kind: "scalar"
                server_access: read
        - name: clGetDeviceIDs
          latency: 0.0
          special_handling:
            icd:
              handler_prologue: "if (nullptr == platform) {\n        return CL_INVALID_PLATFORM;\n    }\n"
          cacheable:
            on_server: True
            on_client: True
            based_on:
              - 0: value
                1: not_null
                2: not_null
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: platform
              type: cl_platform_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclPlatform*>({arg})->asRemoteObject()"
            1:
              name: device_type
              type: cl_device_type
              kind: scalar
            2:
              name: num_entries
              type: cl_uint
              kind: scalar
            3:
              name: devices
              type: "cl_device_id*"
              kind: ptr_array
              kind_details:
                num_elements: "num_entries"
                can_be_null: True
                element:
                  type: cl_device_id
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, platform, false)"
                server_access: write
            4:
              name: num_devices
              type: "cl_uint*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_uint
                  kind: scalar
                server_access: write
        - name: clGetDeviceInfo
          latency: 0.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper" # Dedicated handling for get device info to report no image support in CAL
              handler_prologue: "if (isCacheable(param_name) && static_cast<IcdOclDevice*>(device)->cache.find(param_name,param_value,param_value_size_ret)) {\n        return CL_SUCCESS;\n    }"
              handler_epilogue: "if (isCacheable(param_name)) {\n        static_cast<IcdOclDevice*>(device)->cache.store(param_name, param_value, captured_size);\n    }"
              handler_epilogue_data: "auto captured_size = command->captures.param_value_size_ret;"
            rpc:
              emit_copy_assignment: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_device_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                always_queried: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clCreateContext
          latency: 1.0
          special_handling:
            icd:
              handler_epilogue: "if (ret != nullptr) {\n        ret->asLocalObject()->setDevicesList(num_devices, devices);\n    }"
          returns:
            type: cl_context
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg})"
          args:
            0:
              name: properties
              type: "const cl_context_properties*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_context_properties"
                  kind: "scalar"
                  translate_before: "{dst} = (({index} >= 1) && (CL_CONTEXT_PLATFORM == *(&{arg}-1))) ? reinterpret_cast<cl_context_properties>(static_cast<IcdOclPlatform*>(reinterpret_cast<cl_platform_id>({arg}))->asRemoteObject()) : {arg}"
                server_access: read
            1:
              name: num_devices
              type: cl_uint
              kind: scalar
            2:
              name: devices
              type: "const cl_device_id*"
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                element:
                  type: "cl_device_id"
                  kind: "scalar"
                  translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: pfn_notify
              type: "void (CL_CALLBACK*)(const char* errinfo, const void* private_info, size_t cb, void* user_data)"
              kind: ptr_func
              kind_details:
                variable_generator: "void (CL_CALLBACK* {arg})(const char* errinfo, const void* private_info, size_t cb, void* user_data)"
              ignore: True
            4:
              name: user_data
              type: "void*"
              kind: ptr_va
              ignore: True
            5:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateContextFromType
          latency: 1.0
          returns:
            type: cl_context
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg})"
          args:
            0:
              name: properties
              type: "const cl_context_properties*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_context_properties"
                  kind: "scalar"
                  translate_before: "{dst} = (({index} >= 1) && (CL_CONTEXT_PLATFORM == *(&{arg}-1))) ? reinterpret_cast<cl_context_properties>(static_cast<IcdOclPlatform*>(reinterpret_cast<cl_platform_id>({arg}))->asRemoteObject()) : {arg}"
                server_access: read
            1:
              name: device_type
              type: cl_device_type
              kind: scalar
            2:
              name: pfn_notify
              type: "void (CL_CALLBACK*)(const char* errinfo, const void* private_info, size_t cb, void* user_data)"
              kind: ptr_func
              kind_details:
                variable_generator: "void (CL_CALLBACK* {arg})(const char* errinfo, const void* private_info, size_t cb, void* user_data)"
              ignore: True
            3:
              name: user_data
              type: "void*"
              kind: ptr_va
              ignore: True
            4:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clGetContextInfo
          latency: 0.0
          special_handling:
            icd:
              handler_prologue: "if (isCacheable(param_name) && static_cast<IcdOclContext*>(context)->cache.find(param_name,param_value,param_value_size_ret)) {\n        return CL_SUCCESS;\n    }"
              handler_epilogue: "if (isCacheable(param_name)) {\n        static_cast<IcdOclContext*>(context)->cache.store(param_name, param_value, captured_size);\n    }"
              handler_epilogue_data: "auto captured_size = command->captures.param_value_size_ret;"
            rpc:
              emit_copy_assignment: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_context_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                  translate_after: "if((param_name == CL_CONTEXT_DEVICES) && ((i%sizeof(cl_device_id)) == 0)) {{  globalPlatform->translateRemoteObjectToLocalObject(*reinterpret_cast<cl_device_id*>(&{arg})); }}"
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                always_queried: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clCreateSubDevices
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: in_device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            1:
              name: properties
              type: "const cl_device_partition_property*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: cl_device_partition_property
                  kind: scalar
                server_access: read
            2:
              name: num_devices
              type: cl_uint
              kind: scalar
            3:
              name: out_devices
              type: "cl_device_id*"
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: cl_device_id
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, in_device, true)"
                server_access: write
            4:
              name: num_devices_ret
              type: "cl_uint*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_uint
                  kind: scalar
                server_access: write
        - name: clCreateCommandQueue
          latency: 1.0
          special_handling:
            icd:
              handler_epilogue: "static_cast<IcdOclCommandQueue *>(ret)->context = static_cast<IcdOclContext *>(context);"
          returns:
            type: cl_command_queue
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: properties
              type: "cl_command_queue_properties "
              kind: scalar
              translate_before: "{dst} = globalPlatform->translateQueueFlags({arg})"
            3:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clSetDefaultDeviceCommandQueue
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "if ({arg}) {dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
        - name: clCreateCommandQueueWithProperties
          latency: 1.0
          special_handling:
            icd:
              handler_epilogue: "static_cast<IcdOclCommandQueue *>(ret)->context = static_cast<IcdOclContext *>(context);"
          returns:
            type: cl_command_queue
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: properties
              type: "const cl_queue_properties*"
              kind: ptr_array
              translate_before: "globalPlatform->translateQueueFlags(mutable_element_cast({dst_mem}))"
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_queue_properties"
                  kind: "scalar"
                server_access: read
            3:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateProgramWithSource
          latency: 0.5
          special_handling:
            icd:
              handler_epilogue: "static_cast<IcdOclProgram *>(ret)->context = static_cast<IcdOclContext *>(context);"
          returns:
            type: cl_program
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: count
              type: cl_uint
              kind: scalar
            2:
              name: strings
              type: "const char**"
              kind: ptr_array
              kind_details:
                num_elements: "count"
                can_be_null: True
                element:
                  type: "const char*"
                  kind: "ptr_array"
                  kind_details:
                    num_elements: "Cal::Icd::Ocl::getSingleSourceLengthForClCreateProgramWithSource({name}, {index}, lengths)"
                    element:
                      type: "char"
                      kind: "scalar"
                server_access: read
            3:
              name: lengths
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "count"
                can_be_null: True
                element:
                  type: "size_t"
                  kind: "scalar"
                server_access: read
            4:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateProgramWithIL
          latency: 0.5
          special_handling:
            icd:
              handler_epilogue: "static_cast<IcdOclProgram *>(ret)->context = static_cast<IcdOclContext *>(context);"
          returns:
            type: cl_program
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: il
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "length"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            2:
              name: length
              type: size_t
              kind: scalar
            3:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateProgramWithBinary
          special_handling:
            icd:
              handler_epilogue: "static_cast<IcdOclProgram *>(ret)->context = static_cast<IcdOclContext *>(context);"
          latency: 1.0
          returns:
            type: cl_program
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: num_devices
              type: cl_uint
              kind: scalar
            2:
              name: device_list
              type: const cl_device_id*
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: "cl_device_id"
                  kind: "scalar"
                  translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: lengths
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: "size_t"
                  kind: "scalar"
                server_access: read
            4:
              name: binaries
              type: "const unsigned char**"
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: "const unsigned char*"
                  kind: "ptr_array"
                  kind_details:
                    num_elements: "lengths[{index}]"
                    element:
                      type: "unsigned char"
                      kind: "scalar"
                server_access: read
            5:
              name: binary_status
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: "cl_int"
                  kind: "scalar"
                server_access: write
            6:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateProgramWithBuiltInKernels
          latency: 1.0
          special_handling:
            icd:
              handler_epilogue: "static_cast<IcdOclProgram *>(ret)->context = static_cast<IcdOclContext *>(context);"
          returns:
            type: cl_program
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: num_devices
              type: cl_uint
              kind: scalar
            2:
              name: device_list
              type: const cl_device_id*
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: "cl_device_id"
                  kind: "scalar"
                  translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: kernel_names
              type: "const char*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated"
                can_be_null: True
                element:
                  type: "char"
                  kind: "scalar"
                server_access: read
            4:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clUnloadCompiler
          latency: 0.0
          special_handling:
            icd:
              intentionally_ignore: True # Would affect whole CAL service
            rpc:
              dont_generate_rpc_message: True
          returns:
            type: cl_int
            kind: scalar
        - name: clUnloadPlatformCompiler
          latency: 0.0
          special_handling:
            icd:
              intentionally_ignore: True # Would affect whole CAL service
            rpc:
              dont_generate_rpc_message: True
          args:
            0:
              name: platform
              type: cl_platform_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclPlatform*>({arg})->asRemoteObject()"
          returns:
            type: cl_int
            kind: scalar
        - name: clBuildProgram
          latency: 2.0
          special_handling:
            icd:
              handler_prologue: "if(pfn_notify){Cal::Icd::icdGlobalState.getOclPlatform()->enableCallbacksHandler();}\n"
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: num_devices
              type: cl_uint
              kind: scalar
            2:
              name: device_list
              type: const cl_device_id*
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: "cl_device_id"
                  kind: "scalar"
                  translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: options
              type: "const char*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated"
                can_be_null: True
                element:
                  type: "char"
                  kind: "scalar"
                server_access: read
            4:
              name: pfn_notify
              type: "void (CL_CALLBACK*)(cl_program program, void* user_data)"
              kind: ptr_func
              kind_details:
                variable_generator: "void (CL_CALLBACK* {arg})(cl_program program, void* user_data)"
              ignore: True
            5:
              name: user_data
              type: "void*"
              kind: ptr_va
              ignore: True
        - name: clCompileProgram
          latency: 2.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: num_devices
              type: cl_uint
              kind: scalar
            2:
              name: device_list
              type: const cl_device_id*
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: "cl_device_id"
                  kind: "scalar"
                  translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: options
              type: "const char*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated"
                can_be_null: True
                element:
                  type: "char"
                  kind: "scalar"
                server_access: read
            4:
              name: num_input_headers
              type: cl_uint
              kind: scalar
            5:
              name: input_headers
              type: "const cl_program*"
              kind: ptr_array
              kind_details:
                num_elements: "num_input_headers"
                can_be_null: True
                element:
                  type: "cl_program"
                  kind: "scalar"
                  translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
                server_access: read
            6:
              name: header_include_names
              type: "const char**"
              kind: ptr_array
              kind_details:
                num_elements: "num_input_headers"
                can_be_null: True
                element:
                  type: "const char*"
                  kind: "ptr_array"
                  kind_details:
                    num_elements: "nullterminated"
                    element:
                      type: "char"
                      kind: "scalar"
                server_access: read
            7:
              name: pfn_notify
              type: "void (CL_CALLBACK*)(cl_program program, void* user_data)"
              kind: ptr_func
              kind_details:
                variable_generator: "void (CL_CALLBACK* {arg})(cl_program program, void* user_data)"
              ignore: True
            8:
              name: user_data
              type: "void*"
              kind: ptr_va
              ignore: True
        - name: clLinkProgram
          latency: 2.0
          returns:
            type: cl_program
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg},context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: num_devices
              type: cl_uint
              kind: scalar
            2:
              name: device_list
              type: const cl_device_id*
              kind: ptr_array
              kind_details:
                num_elements: "num_devices"
                can_be_null: True
                element:
                  type: "cl_device_id"
                  kind: "scalar"
                  translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: options
              type: "const char*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated"
                can_be_null: True
                element:
                  type: "char"
                  kind: "scalar"
                server_access: read
            4:
              name: num_input_programs
              type: cl_uint
              kind: scalar
            5:
              name: input_programs
              type: "const cl_program*"
              kind: ptr_array
              kind_details:
                num_elements: "num_input_programs"
                can_be_null: True
                element:
                  type: "cl_program"
                  kind: "scalar"
                  translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
                server_access: read
            6:
              name: pfn_notify
              type: "void (CL_CALLBACK*)(cl_program program, void* user_data)"
              kind: ptr_func
              kind_details:
                variable_generator: "void (CL_CALLBACK* {arg})(cl_program program, void* user_data)"
              ignore: True
            7:
              name: user_data
              type: "void*"
              kind: ptr_va
              ignore: True
            8:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clGetProgramBuildInfo
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: param_name
              type: cl_program_build_info
              kind: scalar
            3:
              name: param_value_size
              type: size_t
              kind: scalar
            4:
              name: param_value
              type: "void*"
              kind: ptr_array
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            5:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clSetProgramReleaseCallback
          latency: 0.0
          special_handling:
            optional: True # OCL 3.0
            icd:
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->enableCallbacksHandler();\n"
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: pfn_notify
              type: "void (CL_CALLBACK*)(cl_program program, void* user_data)"
              kind: ptr_func
              kind_details:
                variable_generator: "void (CL_CALLBACK* {arg})(cl_program program, void* user_data)"
              ignore: True
            2:
              name: user_data
              type: "void*"
              kind: ptr_va
              ignore: True
        - name: clCreateKernel
          latency: 0.5
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper" # Dedicated handling to query for kernel arg types
          returns:
            type: cl_kernel
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, program)"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: kernel_name
              type: "const char*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated"
                can_be_null: True
                element:
                  type: "char"
                  kind: "scalar"
                server_access: read
            2:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCloneKernel
          latency: 0.5
          returns:
            type: cl_kernel
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, static_cast<IcdOclKernel*>(source_kernel))"
          args:
            0:
              name: source_kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateKernelsInProgram
          latency: 1.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: num_kernels
              type: cl_uint
              kind: scalar
            2:
              name: kernels
              type: cl_kernel*
              kind: ptr_array
              kind_details:
                num_elements: num_kernels
                can_be_null: True
                element:
                  type: "cl_kernel"
                  kind: "scalar"
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, program)"
                server_access: write
            3:
              name: num_kernels_ret
              type: "cl_uint*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_uint
                  kind: scalar
                  default: "0"
                server_access: write
        - name: clGetCommandQueueInfo
          latency: 0.0
          special_handling:
            icd:
              handler_prologue: "if (isCacheable(param_name) && static_cast<IcdOclCommandQueue*>(command_queue)->cache.find(param_name,param_value,param_value_size_ret)) {\n        return CL_SUCCESS;\n    }"
              handler_epilogue: "if (isCacheable(param_name)) {\n        static_cast<IcdOclCommandQueue*>(command_queue)->cache.store(param_name, param_value, captured_size);\n    }"
              handler_epilogue_data: "auto captured_size = command->captures.param_value_size_ret;"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_command_queue_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                always_queried: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        #   - name : clSetCommandQueueProperty  # Deprecated, unsafe API
        #     returns :
        #               type : cl_int
        #               kind : scalar
        #               default : "CL_DEVICE_NOT_AVAILABLE"
        #     args :
        #            0 :
        #               name : command_queue
        #               type : cl_command_queue
        #               kind : scalar
        #               translate_before : "{dst} = {arg}->asLocalObject()->asRemoteObject()"
        #            1 :
        #               name : properties
        #               type : cl_command_queue_properties
        #               kind : scalar
        #            2 :
        #               name : enable
        #               type : cl_bool
        #               kind : scalar
        #            3 :
        #               name : old_properties
        #               type : "cl_command_queue_properties*"
        #               kind : ptr_array
        #               kind_details :
        #                   num_elements: "1"
        #                   can_be_null : True
        #                   element :
        #                       type : size_t
        #                       kind : scalar
        #                   server_access : write
        - name: clGetProgramInfo
          latency: 0.0
          special_handling:
            icd:
              dont_generate_handler: True
            rpc:
              dont_generate_rpc_message: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
            1:
              name: param_name
              type: cl_program_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: pointer
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: pointer
        - name: clGetProgramInfoRpcHelper
          latency: 0.0
          special_handling:
            variant_of: "clGetProgramInfo"
            icd:
              not_in_dispatch_table: True
              dont_generate_stub: True
            rpc:
              dont_generate_call_directly: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_program_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                  translate_after: "if((param_name == CL_PROGRAM_DEVICES) && ((i % sizeof(cl_device_id)) == 0)) {{\n                *reinterpret_cast<cl_device_id*>(&{dst}) = globalPlatform->translateNewRemoteObjectToLocalObject(*reinterpret_cast<cl_device_id*>(&{arg}), program);\n            }}"
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetProgramInfoGetBinariesRpcHelper
          latency: 0.0
          special_handling:
            variant_of: "clGetProgramInfo"
            icd:
              not_in_dispatch_table: True
              dont_generate_stub: True
            rpc:
              custom_handler: True
              dont_generate_call_directly: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: total_binaries_size
              type: size_t
              kind: scalar
            2:
              name: concatenated_binaries
              type: "unsigned char*"
              kind: ptr_array
              kind_details:
                num_elements: "total_binaries_size"
                can_be_null: True
                element:
                  type: "unsigned char"
                  kind: scalar
                server_access: write
            3:
              name: binaries_count
              type: size_t
              kind: scalar
            4:
              name: binaries_lengths
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "binaries_count"
                can_be_null: True
                element:
                  type: "size_t"
                  kind: "scalar"
                server_access: read
            5:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetMemObjectInfo
          latency: 0.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: memobj
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: param_name
              type: cl_mem_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetImageInfo
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: image
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: param_name
              type: cl_image_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetSamplerInfo
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: sampler
              type: cl_sampler
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: param_name
              type: cl_sampler_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetKernelInfo
          latency: 0.0
          special_handling:
            icd:
              handler_prologue: "if (isCacheable(param_name) && static_cast<IcdOclKernel*>(kernel)->cache.find(param_name,param_value,param_value_size_ret)) {\n        return CL_SUCCESS;\n    }"
              handler_epilogue: "if (isCacheable(param_name)) {\n        static_cast<IcdOclKernel*>(kernel)->cache.store(param_name, param_value, captured_size);\n    }"
              handler_epilogue_data: "auto captured_size = command->captures.param_value_size_ret;"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_kernel_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                always_queried: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetKernelWorkGroupInfo
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: param_name
              type: cl_kernel_work_group_info
              kind: scalar
            3:
              name: param_value_size
              type: size_t
              kind: scalar
            4:
              name: param_value
              type: "void*"
              kind: ptr_array
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            5:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetKernelArgInfo
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: arg_indx
              type: cl_uint
              kind: scalar
            2:
              name: param_name
              type: cl_kernel_arg_info
              kind: scalar
            3:
              name: param_value_size
              type: size_t
              kind: scalar
            4:
              name: param_value
              type: "void*"
              kind: ptr_array
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            5:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetKernelSubGroupInfo
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: param_name
              type: cl_kernel_sub_group_info
              kind: scalar
            3:
              name: input_value_size
              type: size_t
              kind: scalar
            4:
              name: input_value
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "input_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: read
            5:
              name: param_value_size
              type: size_t
              kind: scalar
            6:
              name: param_value
              type: "void*"
              kind: ptr_array
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            7:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clReleaseCommandQueue
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_prologue: "static_cast<IcdOclCommandQueue *>(command_queue)->beforeReleaseCallback();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->dec()"
        - name: clReleaseContext
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_prologue: "context->asLocalObject()->beforeReleaseCallback();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->dec()"
        - name: clReleaseDevice
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
              translate_after: "if(static_cast<IcdOclDevice*>({arg})->isSubDevice){{{arg}->asLocalObject()->dec();}}"
        - name: clReleaseKernel
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->dec()"
        - name: clReleaseSampler
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: sampler
              type: cl_sampler
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->dec()"
        - name: clReleaseProgram
          latency: 0.0
          special_handling:
            icd:
              handler_prologue: "if (static_cast<IcdOclProgram *>(program)->context) {\n        static_cast<IcdOclProgram *>(program)->context->asLocalObject()->beforeReleaseCallback();\n    }"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
              translate_after: "const auto prevRefCount = {arg}->asLocalObject()->dec();\n        if (prevRefCount == 1u) {{\n            globalPlatform->removeGlobalPointers(program);\n        }}"
        - name: clReleaseMemObject
          latency: 0.0
          special_handling:
            icd:
              handler_prologue:
                [
                  "invalidateKernelArgCache();",
                  "if(memobj->asLocalObject()->getContext() && memobj->asLocalObject()->getContext()->tryRecycleClBuffer(memobj)){ return CL_SUCCESS; }",
                ]
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: memobj
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->dec()"
        - name: clReleaseEvent
          latency: 0.0
          call_async: true
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: event
              type: cl_event
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->dec()"
        - name: clRetainCommandQueue
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
              translate_after: "static_cast<IcdOclCommandQueue*>({arg})->inc()"
        - name: clRetainContext
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
              translate_after: "static_cast<IcdOclContext*>({arg})->inc()"
        - name: clRetainDevice
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->inc()"
        - name: clRetainProgram
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
              translate_after: "static_cast<IcdOclProgram*>({arg})->inc()"
        - name: clRetainMemObject
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: memobj
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
              translate_after: "static_cast<IcdOclMem*>({arg})->inc()"
        - name: clRetainSampler
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: sampler
              type: cl_sampler
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->inc()"
        - name: clRetainKernel
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
              translate_after: "static_cast<IcdOclKernel*>({arg})->inc()"
        - name: clRetainEvent
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: event
              type: cl_event
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
              translate_after: "static_cast<IcdOclEvent*>({arg})->inc()"
        - name: clFlush
          latency: 0.0
          call_async: true
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
        - name: clFinish
          latency: 2.0
          special_handling:
            icd:
              handler_prologue: "if(command_queue->asLocalObject()->isSynchronized()){ return CL_SUCCESS; }\n"
              handler_epilogue: "command_queue->asLocalObject()->synchronizeNow();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
        - name: clEnqueueNDRangeKernel
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_prologue: "static_cast<IcdOclKernel*>(kernel)->moveArgsToGpu();\n"
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            2:
              name: work_dim
              type: cl_uint
              kind: scalar
            3:
              name: global_work_offset
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "work_dim"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: global_work_size
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "work_dim"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: local_work_size
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "work_dim"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueTask
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            2:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            3:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            4:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueMarkerWithWaitList
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            2:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueMarker
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueBarrierWithWaitList
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            2:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueBarrier
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
        - name: clEnqueueWaitForEvents
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: num_events
              type: cl_uint
              kind: scalar
            2:
              name: event_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
        - name: clEnqueueMigrateMemObjects
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: num_mem_objects
              type: cl_uint
              kind: scalar
            2:
              name: mem_objects
              type: "const cl_mem*"
              kind: ptr_array
              kind_details:
                num_elements: "num_mem_objects"
                can_be_null: True
                element:
                  type: cl_mem
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
                server_access: read
            3:
              name: flags
              type: cl_mem_migration_flags
              kind: scalar
            4:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            5:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            6:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clGetExtensionFunctionAddressForPlatform
          latency: 0.0
          special_handling:
            icd:
              dont_generate_handler: True
            rpc:
              dont_generate_rpc_handler: True
              dont_generate_rpc_message: True
          returns:
            type: void*
            kind: ptr_va
          args:
            0:
              name: platform
              type: cl_platform_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclPlatform*>({arg})->asRemoteObject()"
            1:
              name: funcname
              type: "const char*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated"
                can_be_null: True
                element:
                  type: "char"
                  kind: "scalar"
                server_access: read
        - name: clCreateBuffer
          latency: 1.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper" # Dedicated handling due to shmem management
            rpc:
              custom_handler: True
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            2:
              name: size
              type: size_t
              kind: scalar
            3:
              name: host_ptr
              type: "void*"
              kind: ptr_array
              kind_details:
                num_elements: "((nullptr != {arg_prefix}host_ptr) ? {arg_prefix}size : 0U)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            4:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
          implicit_args:
            0:
              name: hostptr
              type: "void*"
              kind: scalar
              server_access: write
            1:
              name: hostptr_shmem_resource
              type: int
              kind: scalar
              server_access: write
            2:
              name: hostptr_offset_within_resource
              type: size_t
              kind: scalar
              server_access: write
            3:
              name: hostptr_aligned_size
              type: size_t
              kind: scalar
              server_access: write
        - name: clCreateBufferRpcHelperUseHostPtrZeroCopyMallocShmem
          latency: 1.0
          special_handling:
            variant_of: "clCreateBuffer"
            icd:
              not_in_dispatch_table: True
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: flags
              type: cl_mem_flags
              kind: scalar
            2:
              name: size
              type: size_t
              kind: scalar
            3:
              name: host_ptr
              type: "void*"
              kind: ptr_zero_copy_malloc_shmem_va
              kind_details:
                num_elements: "((nullptr != {arg_prefix}host_ptr) ? {arg_prefix}size : 0U)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            4:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateSubBuffer
          latency: 0.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper" # Dedicated handling due to shmem management
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, buffer)"
          args:
            0:
              name: buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            2:
              name: buffer_create_type
              type: cl_buffer_create_type
              kind: scalar
            3:
              name: buffer_create_info
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "Cal::Icd::Ocl::getSubBufferCreateInfoSize(buffer_create_type)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            4:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreatePipe
          latency: 1.0
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            2:
              name: pipe_packet_size
              type: cl_uint
              kind: scalar
            3:
              name: pipe_max_packets
              type: cl_uint
              kind: scalar
            4:
              name: properties
              type: "const cl_pipe_properties*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_pipe_properties"
                  kind: "scalar"
                server_access: read
            5:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clGetPipeInfo
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: pipe
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_pipe_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clCreateImage
          latency: 1.0
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteImageObjectToLocalObject({arg}, context, OclImageTraits(image_format, image_desc))"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            2:
              name: image_format
              type: "const cl_image_format*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: "cl_image_format"
                  kind: "scalar"
                server_access: read
            3:
              name: image_desc
              type: "const cl_image_desc*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: "cl_image_desc"
                  kind: "scalar"
                server_access: read
            4:
              name: host_ptr
              type: void*
              kind: ptr_array
              kind_details:
                num_elements: "Cal::Icd::Ocl::getImageHostMemorySize(image_format, image_desc, host_ptr)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            5:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateImage2D
          latency: 1.0
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteImageObjectToLocalObject({arg}, context, OclImageTraits(image_format, image_width, image_height, image_row_pitch))"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            2:
              name: image_format
              type: "const cl_image_format*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: "cl_image_format"
                  kind: "scalar"
                server_access: read
            3:
              name: image_width
              type: size_t
              kind: scalar
            4:
              name: image_height
              type: size_t
              kind: scalar
            5:
              name: image_row_pitch
              type: size_t
              kind: scalar
            6:
              name: host_ptr
              type: void*
              kind: ptr_array
              kind_details:
                num_elements: "Cal::Icd::Ocl::getImageHostMemorySize(CL_MEM_OBJECT_IMAGE2D, image_format, image_width, image_height, 0, image_row_pitch, 0, 0, host_ptr)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            7:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateImage3D
          latency: 1.0
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteImageObjectToLocalObject({arg}, context, OclImageTraits(image_format, image_width, image_height, image_depth, image_row_pitch, image_slice_pitch))"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            2:
              name: image_format
              type: "const cl_image_format*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: "cl_image_format"
                  kind: "scalar"
                server_access: read
            3:
              name: image_width
              type: size_t
              kind: scalar
            4:
              name: image_height
              type: size_t
              kind: scalar
            5:
              name: image_depth
              type: size_t
              kind: scalar
            6:
              name: image_row_pitch
              type: size_t
              kind: scalar
            7:
              name: image_slice_pitch
              type: size_t
              kind: scalar
            8:
              name: host_ptr
              type: void*
              kind: ptr_array
              kind_details:
                num_elements: "Cal::Icd::Ocl::getImageHostMemorySize(CL_MEM_OBJECT_IMAGE2D, image_format, image_width, image_height, image_depth, image_row_pitch, image_slice_pitch, 0, host_ptr)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            9:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateSampler
          latency: 1.0
          returns:
            type: cl_sampler
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: normalized_coords
              type: cl_bool
              kind: scalar
            2:
              name: addressing_mode
              type: cl_addressing_mode
              kind: scalar
            3:
              name: filter_mode
              type: cl_filter_mode
              kind: scalar
            4:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateSamplerWithProperties # OCL 3.0
          latency: 1.0
          special_handling:
            optional: True # OCL 3.0
          returns:
            type: cl_sampler
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: properties
              type: "const cl_sampler_properties*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_sampler_properties"
                  kind: "scalar"
                server_access: read
            2:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateImageWithProperties # OCL 3.0
          latency: 1.0
          special_handling:
            optional: True # OCL 3.0
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: properties
              type: "const cl_mem_properties*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_mem_properties"
                  kind: "scalar"
                server_access: read
            2:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            3:
              name: image_format
              type: "const cl_image_format*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: "cl_image_format"
                  kind: "scalar"
                server_access: read
            4:
              name: image_desc
              type: "const cl_image_desc*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: "cl_image_desc"
                  kind: "scalar"
                server_access: read
            5:
              name: host_ptr
              type: "void*"
              kind: ptr_array
              kind_details:
                num_elements: "Cal::Icd::Ocl::getImageHostMemorySize(image_format, image_desc, host_ptr)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            6:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clCreateBufferWithProperties # OCL 3.0
          latency: 1.0
          special_handling:
            optional: True # OCL 3.0
          returns:
            type: cl_mem
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: properties
              type: "const cl_mem_properties*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_mem_properties"
                  kind: "scalar"
                server_access: read
            2:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            3:
              name: size
              type: size_t
              kind: scalar
            4:
              name: host_ptr
              type: "void*"
              kind: ptr_array
              kind_details:
                num_elements: "size"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            5:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clGetSupportedImageFormats
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
            1:
              name: flags
              type: cl_mem_flags
              kind: scalar
              translate_before: "{dst} = Cal::Icd::Ocl::translateUseHostPtr({arg})"
            2:
              name: image_type
              type: cl_mem_object_type
              kind: scalar
            3:
              name: num_entries
              type: cl_uint
              kind: scalar
            4:
              name: image_formats
              type: "cl_image_format*"
              kind: ptr_array
              kind_details:
                num_elements: "num_entries"
                can_be_null: True
                element:
                  type: cl_image_format
                  kind: scalar
                server_access: write
            5:
              name: num_image_formats
              type: "cl_uint*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_uint
                  kind: scalar
                server_access: write
        - name: clSetKernelArg
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper" # Dedicated handling because of temporary cache implementation
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: arg_index
              type: cl_uint
              kind: scalar
            2:
              name: arg_size
              type: size_t
              kind: scalar
            3:
              name: arg_value
              type: "const void*"
              kind: ptr_array
              translate_before: "static_cast<IcdOclKernel*>(kernel)->convertClMemArgIfNeeded(arg_index, arg_size, {dst_mem})"
              kind_details:
                num_elements: "arg_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: read
        - name: clSetProgramSpecializationConstant
          latency: 0.0
          special_handling:
            optional: True # OCL 2.2
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            1:
              name: spec_id
              type: cl_uint
              kind: scalar
            2:
              name: spec_size
              type: size_t
              kind: scalar
            3:
              name: spec_value
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "spec_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: read
        - name: clEnqueueWriteBuffer
          category: Copy
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->getPageFaultManager().moveAllocationToGpu(ptr);"
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: blocking_write
              type: cl_bool
              kind: scalar
            3:
              name: offset
              type: size_t
              kind: scalar
            4:
              name: size
              type: size_t
              kind: scalar
            5:
              name: ptr
              type: "const void*"
              kind_details:
                num_elements: "size"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
              kind_variants:
                - kind: ptr_va
                  capture_details:
                    mode: staging_usm
                    reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
                - kind: ptr_usm_va
                - kind: ptr_zero_copy_malloc_shmem_va
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueWriteBufferRect
          category: Copy
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->getPageFaultManager().moveAllocationToGpu(ptr);"
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: blocking_write
              type: cl_bool
              kind: scalar
            3:
              name: buffer_offset
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: host_offset
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            6:
              name: buffer_row_pitch
              type: size_t
              kind: scalar
            7:
              name: buffer_slice_pitch
              type: size_t
              kind: scalar
            8:
              name: host_row_pitch
              type: size_t
              kind: scalar
            9:
              name: host_slice_pitch
              type: size_t
              kind: scalar
            10:
              name: ptr
              type: "const void*"
              kind_details:
                num_elements: "Cal::Utils::getBufferRectSizeInBytes({arg_prefix}region, {arg_prefix}host_row_pitch, {arg_prefix}host_slice_pitch)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
              kind_variants:
                - kind: ptr_va
                  capture_details:
                    mode: staging_usm
                    reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
                - kind: ptr_usm_va
                - kind: ptr_zero_copy_malloc_shmem_va
            11:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            12:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            13:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueReadBuffer
          category: Copy
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->getPageFaultManager().moveAllocationToGpu(ptr);"
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: blocking_read
              type: cl_bool
              kind: scalar
              translate_before: "Cal::Icd::Ocl::warnIfNonBlockingRead({dst})"
            3:
              name: offset
              type: size_t
              kind: scalar
            4:
              name: size
              type: size_t
              kind: scalar
            5:
              name: ptr
              type: "void*"
              kind_details:
                num_elements: "size"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: write
              kind_variants:
                - kind: ptr_va
                  capture_details:
                    mode: staging_usm
                    reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
                - kind: ptr_usm_va
                - kind: ptr_zero_copy_malloc_shmem_va
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueReadBufferRect
          category: Copy
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->getPageFaultManager().moveAllocationToGpu(ptr);"
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: blocking_read
              type: cl_bool
              kind: scalar
            3:
              name: buffer_offset
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: host_offset
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            6:
              name: buffer_row_pitch
              type: size_t
              kind: scalar
            7:
              name: buffer_slice_pitch
              type: size_t
              kind: scalar
            8:
              name: host_row_pitch
              type: size_t
              kind: scalar
            9:
              name: host_slice_pitch
              type: size_t
              kind: scalar
            10:
              name: ptr
              type: "void*"
              kind_details:
                num_elements: "Cal::Utils::getBufferRectSizeInBytes({arg_prefix}region, {arg_prefix}host_row_pitch, {arg_prefix}host_slice_pitch)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: write
              kind_variants:
                - kind: ptr_va
                  capture_details:
                    mode: staging_usm
                    reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
                - kind: ptr_usm_va
                - kind: ptr_zero_copy_malloc_shmem_va
            11:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            12:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            13:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueCopyBuffer
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: src_buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: dst_buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            3:
              name: src_offset
              type: size_t
              kind: scalar
            4:
              name: dst_offset
              type: size_t
              kind: scalar
            5:
              name: size
              type: size_t
              kind: scalar
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueCopyBufferRect
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: src_buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: dst_buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            3:
              name: src_origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: dst_origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            6:
              name: src_row_pitch
              type: size_t
              kind: scalar
            7:
              name: src_slice_pitch
              type: size_t
              kind: scalar
            8:
              name: dst_row_pitch
              type: size_t
              kind: scalar
            9:
              name: dst_slice_pitch
              type: size_t
              kind: scalar
            10:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            11:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            12:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueReadImage
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: image
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: blocking_read
              type: cl_bool
              kind: scalar
              translate_before: "Cal::Icd::Ocl::warnIfNonBlockingRead({dst})"
            3:
              name: src_origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: row_pitch
              type: size_t
              kind: scalar
            6:
              name: slice_pitch
              type: size_t
              kind: scalar
            7:
              name: ptr
              type: "void*"
              capture_details:
                mode: staging_usm
                reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
              kind: ptr_va
              kind_details:
                num_elements: "Cal::Icd::Ocl::getImageReadWriteHostMemorySize({arg_prefix}image, {arg_prefix}src_origin, {arg_prefix}region, {arg_prefix}row_pitch, {arg_prefix}slice_pitch)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: write
            8:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            9:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            10:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueWriteImage
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: image
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: blocking_write
              type: cl_bool
              kind: scalar
            3:
              name: origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: input_row_pitch
              type: size_t
              kind: scalar
            6:
              name: input_slice_pitch
              type: size_t
              kind: scalar
            7:
              name: ptr
              type: "const void*"
              capture_details:
                mode: staging_usm
                reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
              kind: ptr_va
              kind_details:
                num_elements: "Cal::Icd::Ocl::getImageReadWriteHostMemorySize({arg_prefix}image, {arg_prefix}origin, {arg_prefix}region, {arg_prefix}input_row_pitch, {arg_prefix}input_slice_pitch)"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            8:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            9:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            10:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueCopyImage
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: src_image
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: dst_image
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            3:
              name: src_origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: dst_origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueCopyImageToBuffer
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: src_image
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: dst_buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            3:
              name: src_origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: dst_offset
              type: size_t
              kind: scalar
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueCopyBufferToImage
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: src_buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: dst_image
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            3:
              name: src_offset
              type: size_t
              kind: scalar
            4:
              name: dst_origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueMapBuffer
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: "void*"
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateMappedPointer(buffer, {arg}, offset)"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: buffer
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: blocking_map
              type: cl_bool
              kind: scalar
            3:
              name: map_flags
              type: cl_map_flags
              kind: scalar
            4:
              name: offset
              type: size_t
              kind: scalar
            5:
              name: cb
              type: size_t
              kind: scalar
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
            9:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clEnqueueUnmapMemObject
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: memobj
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: mapped_ptr
              type: "void*"
              kind: scalar
            3:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            4:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            5:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueFillBuffer
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: memobj
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: pattern
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "patternSize"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            3:
              name: patternSize
              type: size_t
              kind: scalar
            4:
              name: offset
              type: size_t
              kind: scalar
            5:
              name: size
              type: size_t
              kind: scalar
            6:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            7:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            8:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueFillImage
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: image
              type: cl_mem
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclMem*>({arg})->asRemoteObject()"
            2:
              name: fill_color
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "16"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            3:
              name: origin
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: region
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "3"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            6:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            7:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clWaitForEvents
          latency: 2.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: num_events
              type: cl_uint
              kind: scalar
            1:
              name: event_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
        - name: clGetEventInfo
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: event
              type: cl_event
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_event_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clGetEventProfilingInfo
          latency: 0.0
          special_handling:
            icd:
              handler_prologue: "if(Cal::Icd::icdGlobalState.getOclPlatform()->overrideEventProfilingInfo(event, param_name, param_value_size, param_value, param_value_size_ret)) { return CL_SUCCESS; }"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: event
              type: cl_event
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_profiling_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            4:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clCreateUserEvent
          latency: 1.0
          returns:
            type: cl_event
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clSetUserEventStatus
          latency: 1.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: event
              type: cl_event
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
            1:
              name: execution_status
              type: cl_int
              kind: scalar
        - name: clSetEventCallback
          latency: 0.0
          special_handling:
            icd:
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->enableCallbacksHandler();\n"
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: event
              type: cl_event
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
            1:
              name: command_exec_callback_type
              type: cl_int
              kind: scalar
            2:
              name: pfn_notify
              type: "void (CL_CALLBACK*)(cl_event event, cl_int event_command_status, void *user_data)"
              kind: ptr_func
              kind_details:
                variable_generator: "void (CL_CALLBACK* {arg})(cl_event event, cl_int event_command_status, void *user_data)"
              ignore: True
            3:
              name: user_data
              type: "void*"
              kind: ptr_va
              ignore: True
        - name: clGetDeviceAndHostTimer
          latency: 0.0
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            1:
              name: device_timestamp
              type: "cl_ulong*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_ulong
                  kind: scalar
                server_access: write
            2:
              name: host_timestamp
              type: "cl_ulong*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_ulong
                  kind: scalar
                server_access: write
        - name: clGetHostTimer
          latency: 0.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper" # Dedicated handling with fast clock getter
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            1:
              name: host_timestamp
              type: "cl_ulong*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_ulong
                  kind: scalar
                server_access: write
        - name: clSVMAlloc
          latency: 1.0
          special_handling:
            icd:
              handler_only_suffix: "RpcHelper"
            rpc:
              custom_handler: True
          returns:
            type: void*
            kind: ptr_usm_va
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: flags
              type: cl_svm_mem_flags
              kind: scalar
            2:
              name: size
              type: size_t
              kind: scalar
            3:
              name: alignment
              type: cl_uint
              kind: scalar
          implicit_args:
            0:
              name: shmem_resource
              type: int
              kind: scalar
              server_access: write
            1:
              name: offset_within_resource
              type: size_t
              kind: scalar
              server_access: write
            2:
              name: aligned_size
              type: size_t
              kind: scalar
              server_access: write
        - name: clSVMFree
          latency: 0.0
          special_handling:
            icd:
              handler_prologue: "invalidateKernelArgCache();"
            rpc:
              custom_handler: True
          returns:
            type: void
            kind: scalar
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: ptr
              type: void*
              kind: ptr_usm_va
              translate_before: "globalPlatform->destroyUsmDescriptor({arg})"
              kind_details:
                server_access: none
        - name: clEnqueueSVMMap
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: blocking_map
              type: cl_bool
              kind: scalar
            2:
              name: map_flags
              type: cl_map_flags
              kind: scalar
            3:
              name: svm_ptr
              type: "void*"
              kind: ptr_usm_va
            4:
              name: size
              type: size_t
              kind: scalar
            5:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            6:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            7:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueSVMUnmap
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: svm_ptr
              type: "void*"
              kind: ptr_usm_va
            2:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            3:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            4:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clSetKernelArgSVMPointer
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              dont_generate_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: argIndex
              type: cl_uint
              kind: scalar
            2:
              name: argValue
              type: const void*
              kind: ptr_usm_va
              kind_details:
                server_access: read_write
        - name: clSetKernelExecInfo
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_epilogue: "static_cast<IcdOclKernel*>(kernel)->sharedIndirectAccessSet |= ((param_name == CL_KERNEL_EXEC_INFO_INDIRECT_SHARED_ACCESS_INTEL && param_value) ? *reinterpret_cast<const bool*>(param_value) : false);"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: param_name
              type: cl_kernel_exec_info
              kind: scalar
            2:
              name: param_value_size
              type: size_t
              kind: scalar
            3:
              name: param_value
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: read
        - name: clEnqueueSVMMemFill
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: svm_ptr
              type: void*
              kind: ptr_usm_va
              kind_details:
                server_access: write
            2:
              name: pattern
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "patternSize"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            3:
              name: patternSize
              type: size_t
              kind: scalar
            4:
              name: size
              type: size_t
              kind: scalar
            5:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            6:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            7:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueSVMMigrateMem
          latency: 0.0
          special_handling:
            icd:
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: num_svm_pointers
              type: cl_uint
              kind: scalar
            2:
              name: svm_pointers
              type: "const void**"
              kind: ptr_array
              kind_details:
                num_elements: "num_svm_pointers"
                can_be_null: True
                element:
                  type: const void*
                  kind: ptr_usm_va
                server_access: read
            3:
              name: sizes
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "num_svm_pointers"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: flags
              type: cl_mem_migration_flags
              kind: scalar
            5:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            6:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            7:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueSVMMemcpy
          category: Copy
          latency: 0.0
          call_async: true
          special_handling:
            icd:
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->getPageFaultManager().moveAllocationToGpu(dst_ptr, src_ptr);"
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: blocking
              type: cl_bool
              kind: scalar
            2:
              name: dst_ptr
              type: void*
              kind_details:
                num_elements: "size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
              kind_variants:
                - kind: ptr_array
                  capture_details:
                    mode: standalone
                    reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
                - kind: ptr_usm_va
                - kind: ptr_zero_copy_malloc_shmem_va
            3:
              name: src_ptr
              type: const void*
              kind_details:
                num_elements: "size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: read
              kind_variants:
                - kind: ptr_va
                  capture_details:
                    mode: staging_usm
                    reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
                - kind: ptr_usm_va
                - kind: ptr_zero_copy_malloc_shmem_va
            4:
              name: size
              type: size_t
              kind: scalar
            5:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            6:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            7:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        ################### cl_ext_device_fission EXTENSION
        - name: clCreateSubDevicesEXT
          latency: 0.0
          special_handling:
            extension_name: "cl_ext_device_fission"
            icd:
              in_get_extension_function_address: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: in_device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            1:
              name: properties
              type: "const cl_device_partition_property_ext*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: cl_device_partition_property_ext
                  kind: scalar
                server_access: read
            2:
              name: num_entries
              type: cl_uint
              kind: scalar
            3:
              name: out_devices
              type: "cl_device_id*"
              kind: ptr_array
              kind_details:
                num_elements: "num_entries"
                can_be_null: True
                element:
                  type: cl_device_id
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, in_device)"
                server_access: write
            4:
              name: num_devices
              type: "cl_uint*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_uint
                  kind: scalar
                server_access: write
        - name: clReleaseDeviceEXT
          latency: 0.0
          special_handling:
            extension_name: "cl_ext_device_fission"
            icd:
              in_get_extension_function_address: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->dec()"
        - name: clRetainDeviceEXT
          latency: 0.0
          special_handling:
            extension_name: "cl_ext_device_fission"
            icd:
              in_get_extension_function_address: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = {arg}->asLocalObject()->asRemoteObject()"
              translate_after: "{arg}->asLocalObject()->inc()"
        ################### cl_khr_subgroups EXTENSION
        - name: clGetKernelSubGroupInfoKHR
          latency: 0.0
          special_handling:
            extension_name: "cl_khr_subgroups"
            icd:
              in_get_extension_function_address: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: param_name
              type: cl_kernel_sub_group_info
              kind: scalar
            3:
              name: input_value_size
              type: size_t
              kind: scalar
            4:
              name: input_value
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "input_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: read
            5:
              name: param_value_size
              type: size_t
              kind: scalar
            6:
              name: param_value
              type: "void*"
              kind: ptr_array
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            7:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        ################### cl_khr_suggested_local_work_size EXTENSION
        - name: clGetKernelSuggestedLocalWorkSizeKHR
          latency: 0.0
          special_handling:
            extension_name: "cl_khr_suggested_local_work_size"
            icd:
              in_get_extension_function_address: True
              not_in_dispatch_table: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            2:
              name: work_dim
              type: cl_uint
              kind: scalar
            3:
              name: global_work_offset
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "work_dim"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            4:
              name: global_work_size
              type: "const size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "work_dim"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: read
            5:
              name: suggested_local_work_size
              type: "size_t *"
              kind: ptr_array
              kind_details:
                num_elements: "work_dim"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        ################### cl_khr_create_command_queue EXTENSION
        - name: clCreateCommandQueueWithPropertiesKHR
          latency: 1.0
          special_handling:
            extension_name: "cl_khr_create_command_queue"
            icd:
              in_get_extension_function_address: True
              alias_to: clCreateCommandQueueWithProperties
              not_in_dispatch_table: True
              handler_epilogue: "static_cast<IcdOclCommandQueue *>(ret)->context = static_cast<IcdOclContext *>(context);"
          returns:
            type: cl_command_queue
            kind: scalar
            translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, context)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: properties
              type: "const cl_queue_properties*"
              kind: ptr_array
              translate_before: "globalPlatform->translateQueueFlags(mutable_element_cast({dst_mem}))"
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_queue_properties"
                  kind: "scalar"
                server_access: read
            3:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        ################### USM EXTENSION
        - name: clEnqueueMemFillINTEL
          latency: 0.0
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: dstPtr
              type: void*
              kind: ptr_usm_va
              kind_details:
                server_access: write
            2:
              name: pattern
              type: "const void*"
              kind: ptr_array
              kind_details:
                num_elements: "patternSize"
                can_be_null: True
                element:
                  type: "void"
                  kind: "scalar"
                server_access: read
            3:
              name: patternSize
              type: size_t
              kind: scalar
            4:
              name: size
              type: size_t
              kind: scalar
            5:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            6:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            7:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clEnqueueMemcpyINTEL
          category: Copy
          latency: 0.0
          call_async: true
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->getPageFaultManager().moveAllocationToGpu(dstPtr, srcPtr);"
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: blocking
              type: cl_bool
              kind: scalar
            2:
              name: dstPtr
              type: void*
              kind_details:
                num_elements: "size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
              kind_variants:
                - kind: ptr_va
                  capture_details:
                    mode: staging_usm
                    reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
                - kind: ptr_usm_va
                - kind: ptr_zero_copy_malloc_shmem_va
            3:
              name: srcPtr
              type: const void*
              kind_details:
                num_elements: "size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: read
              kind_variants:
                - kind: ptr_va
                  capture_details:
                    mode: staging_usm
                    reclaim_method: command_queue->asLocalObject()->registerTemporaryAllocation(std::move({allocation}))
                - kind: ptr_usm_va
                - kind: ptr_zero_copy_malloc_shmem_va
            4:
              name: size
              type: size_t
              kind: scalar
            5:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            6:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            7:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        - name: clSetKernelArgMemPointerINTEL
          latency: 0.0
          call_async: true
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
              handler_only_suffix: "RpcHelper" # Dedicated handling because of temporary cache implementation
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: kernel
              type: cl_kernel
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclKernel*>({arg})->asRemoteObject()"
            1:
              name: argIndex
              type: cl_uint
              kind: scalar
            2:
              name: argValue
              type: const void*
              kind: ptr_usm_va
              kind_details:
                server_access: read_write
        - name: clGetMemAllocInfoINTEL
          latency: 0.0
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: ptr
              type: "const void*"
              kind: pointer
            2:
              name: param_name
              type: cl_mem_info_intel
              kind: scalar
            3:
              name: param_value_size
              type: size_t
              kind: scalar
            4:
              name: param_value
              type: "void*"
              kind: ptr_array
              translate_after: "globalPlatform->translateRemoteObjectToLocalObjectInParams({dst}, param_name)"
              kind_details:
                num_elements: "param_value_size"
                can_be_null: True
                element:
                  type: void
                  kind: scalar
                server_access: write
            5:
              name: param_value_size_ret
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: size_t
                  kind: scalar
                server_access: write
        - name: clDeviceMemAllocINTEL
          latency: 1.0
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
          returns:
            type: void*
            kind: ptr_usm_va
            translate_after: "{dst} = Cal::Icd::icdGlobalState.getOclPlatform()->validateNewUsmDevicePointer({arg}, size)"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: properties
              type: "const cl_mem_properties_intel*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_mem_properties_intel"
                  kind: "scalar"
                server_access: read
            3:
              name: size
              type: size_t
              kind: scalar
            4:
              name: alignment
              type: cl_uint
              kind: scalar
            5:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
        - name: clHostMemAllocINTEL
          latency: 1.0
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
              handler_only_suffix: "RpcHelper" # Dedicated handling due to shmem management
            rpc:
              custom_handler: True
          returns:
            type: void*
            kind: ptr_usm_va
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: properties
              type: "const cl_mem_properties_intel*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_mem_properties_intel"
                  kind: "scalar"
                server_access: read
            2:
              name: size
              type: size_t
              kind: scalar
            3:
              name: alignment
              type: cl_uint
              kind: scalar
            4:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
          implicit_args:
            0:
              name: shmem_resource
              type: int
              kind: scalar
              server_access: write
            1:
              name: offset_within_resource
              type: size_t
              kind: scalar
              server_access: write
            2:
              name: aligned_size
              type: size_t
              kind: scalar
              server_access: write
        - name: clSharedMemAllocINTEL
          latency: 1.0
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
              handler_only_suffix: "RpcHelper" # Dedicated handling due to shmem management
            rpc:
              custom_handler: True
          returns:
            type: void*
            kind: ptr_usm_va
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            2:
              name: properties
              type: "const cl_mem_properties_intel*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated_key"
                can_be_null: True
                element:
                  type: "cl_mem_properties_intel"
                  kind: "scalar"
                server_access: read
            3:
              name: size
              type: size_t
              kind: scalar
            4:
              name: alignment
              type: cl_uint
              kind: scalar
            5:
              name: errcode_ret
              type: "cl_int*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_int
                  kind: scalar
                  default: "CL_DEVICE_NOT_AVAILABLE"
                server_access: write
          implicit_args:
            0:
              name: shmem_resource
              type: int
              kind: scalar
              server_access: write
            1:
              name: offset_within_resource
              type: size_t
              kind: scalar
              server_access: write
            2:
              name: aligned_size
              type: size_t
              kind: scalar
              server_access: write
        - name: clMemFreeINTEL
          latency: 0.0
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
              handler_prologue: "Cal::Icd::icdGlobalState.getOclPlatform()->getPageFaultManager().unregisterSharedAlloc(ptr);\n    invalidateKernelArgCache();"
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: ptr
              type: void*
              kind: ptr_usm_va
              translate_before: "globalPlatform->destroyUsmDescriptor({arg})"
              kind_details:
                server_access: none
        - name: clMemBlockingFreeINTEL
          latency: 0.0
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
              handler_prologue: "invalidateKernelArgCache();"
            rpc:
              custom_handler: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: context
              type: cl_context
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclContext*>({arg})->asRemoteObject()"
            1:
              name: ptr
              type: void*
              kind: ptr_usm_va
              translate_before: "globalPlatform->destroyUsmDescriptor({arg})"
              kind_details:
                server_access: none
        - name: clEnqueueMigrateMemINTEL
          latency: 0.0
          special_handling:
            extension_name: "USM"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
              handler_epilogue: "command_queue->asLocalObject()->enqueue();"
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: command_queue
              type: cl_command_queue
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclCommandQueue*>({arg})->asRemoteObject()"
            1:
              name: ptr
              type: const void*
              kind: ptr_usm_va
              kind_details:
                server_access: none
            2:
              name: size
              type: size_t
              kind: scalar
            3:
              name: flags
              type: cl_mem_migration_flags
              kind: scalar
            4:
              name: num_events_in_wait_list
              type: cl_uint
              kind: scalar
            5:
              name: event_wait_list
              type: "const cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "num_events_in_wait_list"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_before: "{dst} = static_cast<IcdOclEvent*>({arg})->asRemoteObject()"
                server_access: read
            6:
              name: event
              type: "cl_event*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: cl_event
                  kind: scalar
                  translate_after: "{dst} = globalPlatform->translateNewRemoteObjectToLocalObject({arg}, command_queue)"
                server_access: write
        ################### cl_get_device_global_variable_pointer_intel EXTENSION
        - name: clGetDeviceGlobalVariablePointerINTEL
          latency: 0.0
          special_handling:
            extension_name: "cl_get_device_global_variable_pointer_intel"
            icd:
              not_in_dispatch_table: True
              in_get_extension_function_address: True
          returns:
            type: cl_int
            kind: scalar
            default: "CL_DEVICE_NOT_AVAILABLE"
          args:
            0:
              name: device
              type: cl_device_id
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclDevice*>({arg})->asRemoteObject()"
            1:
              name: program
              type: cl_program
              kind: scalar
              translate_before: "{dst} = static_cast<IcdOclProgram*>({arg})->asRemoteObject()"
            2:
              name: globalVariableName
              type: "const char*"
              kind: ptr_array
              kind_details:
                num_elements: "nullterminated"
                can_be_null: True
                element:
                  type: "char"
                  kind: "scalar"
                server_access: read
            3:
              name: globalVariableSizeRet
              type: "size_t*"
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: "size_t"
                  kind: "scalar"
                server_access: write
            4:
              name: globalVariablePointerRet
              type: void**
              kind: ptr_array
              kind_details:
                num_elements: "1"
                can_be_null: True
                element:
                  type: void*
                  kind: scalar
                server_access: write
              translate_after: "if (command->captures.ret == CL_SUCCESS)\n            globalPlatform->recordGlobalPointer(program, *{arg})"
